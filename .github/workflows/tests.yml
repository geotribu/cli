name: "ðŸŽ³ Tester"

on:
  push:
    branches:
      - main
    paths:
      - "**/*.py"
      - ".github/workflows/tests.yml"

  pull_request:
    branches:
      - main
    paths:
      - "**/*.py"
      - ".github/workflows/tests.yml"
      - pyproject.toml

env:
  PROJECT_FOLDER: "geotribu_cli"

jobs:
  unit-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-24.04
          - windows-latest
        python-version:
            - "3.10"
            - "3.11"
            - "3.12"
            - "3.13"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Get source code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Install project requirements
        run: |
          python -m pip install -U pip setuptools wheel

      - name: Install project as a package
        run: python -m pip install -e .[all,test]

      - name: Unit tests
        env:
          GEOTRIBU_MASTODON_API_ACCESS_TOKEN: ${{ secrets.GEOTRIBU_MASTODON_API_ACCESS_TOKEN }}
        run: pytest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          OS: ${{ matrix.os }}
          PYTHON: ${{ matrix.python-version }}
        with:
          env_vars: OS,PYTHON
          flags: unittests
          name: Code Coverage for unittests on [${{ matrix.os }}.python-${{ matrix.python-version }}]

  integration-test:
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-24.04
          - windows-latest
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Get source code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Install project requirements
        run: |
          python -m pip install -U pip setuptools wheel

      - name: Install project as a package
        run: python -m pip install -e .[all]

      - name: CLI - Echoing version
        run: geotribu --version

      - name: CLI - Echoing help
        run: geotribu --help

      - name: CLI - Search content
        run: geotribu search-content --no-prompt -n 10 "python +osm"
