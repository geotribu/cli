name: "ðŸŽ³ Tester"

on:
  push:
    branches: [main]
    paths:
      - "**/*.py"
      - ".github/workflows/tests.yml"

  pull_request:
    branches: [main]
    paths:
      - "**/*.py"
      - ".github/workflows/tests.yml"
      - "requirements/base.txt"
      - "requirements/testing.txt"

env:
  PROJECT_FOLDER: "src"

jobs:
  unit-test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-22.04, windows-latest]
        python-version: ["3.10", "3.11"]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Get source code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements/*.txt"

      - name: Install project requirements
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install -U -r requirements.txt
          python -m pip install -U -r requirements/testing.txt

      - name: Install project as a package
        run: python -m pip install -e .

      - name: Unit tests
        run: pytest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.1

  integration-test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-22.04, windows-latest]
        python-version: ["3.10", "3.11"]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Get source code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements/*.txt"

      - name: Install project requirements
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install -U -r requirements.txt

      - name: Install project as a package
        run: python -m pip install -e .

      - name: CLI - Echoing version
        run: geotribu-toolbelt --version

      - name: CLI - Verbose check
        run: geotribu-toolbelt --verbose check

      - name: CLI - Sample scenario
        run: geotribu-toolbelt --verbose
